name: Status Update Notification

on:
  workflow_dispatch:
    # Allow manual triggering for testing
  repository_dispatch:
    types: [status-update-notification]

jobs:
  notify-status-updates:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Set up environment variables
        run: |
          echo "TALLY_API_KEY=${{ secrets.TALLY_API_KEY }}" >> $GITHUB_ENV
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> $GITHUB_ENV
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> $GITHUB_ENV
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> $GITHUB_ENV
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> $GITHUB_ENV
          echo "NOTIFICATION_EMAIL=${{ secrets.NOTIFICATION_EMAIL }}" >> $GITHUB_ENV
          echo "CONWAY_NOTIFICATION_EMAIL=${{ secrets.CONWAY_NOTIFICATION_EMAIL }}" >> $GITHUB_ENV
          echo "DROPBOX_APP_KEY=${{ secrets.DROPBOX_APP_KEY }}" >> $GITHUB_ENV
          echo "DROPBOX_APP_SECRET=${{ secrets.DROPBOX_APP_SECRET }}" >> $GITHUB_ENV
          echo "DROPBOX_REFRESH_TOKEN=${{ secrets.DROPBOX_REFRESH_TOKEN }}" >> $GITHUB_ENV
          echo "DROPBOX_FOLDER_PATH=${{ secrets.DROPBOX_FOLDER_PATH }}" >> $GITHUB_ENV
          
      - name: Run status update notification automation
        working-directory: status_update_notification/src
        run: |
          python main.py
        continue-on-error: true
        
      - name: Commit status history updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if status_history.json was modified
          if [[ -n $(git status --porcelain status_update_notification/status_history.json) ]]; then
            echo "üìù Changes detected in status_history.json, committing..."
            git add status_update_notification/status_history.json
            git commit -m "ü§ñ Update status_history.json - automated status tracking"
            git push
            echo "‚úÖ Status history changes committed and pushed"
          else
            echo "‚ÑπÔ∏è No changes to status_history.json detected"
          fi
        continue-on-error: true
        
      - name: Log completion
        run: |
          echo "Status update notification automation completed"
          echo "Execution time: $(date)"
          echo "Workflow trigger: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"