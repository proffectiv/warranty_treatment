name: Status Update Notification

on:
  repository_dispatch:
    types: [status-update-notification]
  workflow_dispatch:

jobs:
  notify-status-update:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Retrieve status information
        id: status-info
        run: |
          python scripts/get_status_info.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          EVENT_TYPE: ${{ github.event_name }}
          
      - name: Send notification
        if: steps.status-info.outputs.status != 'skipped'
        run: |
          echo "Status Update Notification"
          echo "========================"
          
          echo "Workflow: ${{ steps.status-info.outputs.workflow_name }}"
          echo "Status: ${{ steps.status-info.outputs.status }}"
          echo "Repository: ${{ steps.status-info.outputs.repository }}"
          echo "Run ID: ${{ steps.status-info.outputs.run_id }}"
          echo "Context: ${{ steps.status-info.outputs.context }}"
          echo "Description: ${{ steps.status-info.outputs.description }}"
          echo "App: ${{ steps.status-info.outputs.app_name }}"
          
          echo "Event: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          
          # Add your notification logic here
          # Examples:
          # - Send Slack notification
          # - Send email
          # - Send Discord webhook
          # - Update external status page
          
          echo "Notification sent successfully!"